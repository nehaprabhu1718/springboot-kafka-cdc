#--MongoDB--
spring.data.mongodb.ssl.enabled = true
spring.data.mongodb.uri = mongodb+srv://testcluster:testcluster@testcluster.6zp5b.mongodb.net/
spring.data.mongodb.database = sample_supplies
spring.data.mongodb.collection = sales
resume.token.filePath = src/main/resources/token.txt

# Required connection configs for Kafka producer, consumer, and admin

spring.kafka.bootstrap-servers=pkc-mz3gw.westus3.azure.confluent.cloud:9092

spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='GK7YYMTS3RZ6WCB5' password='ExUnYpPCLyg7Y290gNeBjGdAw+6/uie2Of76Qho7lt5jRa87eMRAZ3u1a4rDupVQ';
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.group-id=springboot-group-1
spring.kafka.consumer.auto-offset-reset=earliest

# Delegate deserializers
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# If you're expecting JSON payloads
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.YourCustomClass
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Best practice for higher availability in Apache Kafka clients prior to 3.0
spring.kafka.properties.session.timeout.ms=45000
